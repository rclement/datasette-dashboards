name: CI/CD

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Python modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --dev --deploy
      - name: Run linting
        run: |
          pipenv run black --check datasette_dashboards tests
          pipenv run flake8 datasette_dashboards tests
      - name: Run tests
        run: |
          pipenv run pytest -v --cov=datasette_dashboards --cov=tests --cov-branch --cov-report=term-missing tests
          pipenv run coverage xml
      - name: Publish code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  deploy-demo:
    runs-on: ubuntu-latest
    needs: [test]
    if: contains(github.ref, 'master')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Cache Python modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --dev --deploy
      - name: Deploy to Vercel
        run: |-
          pipenv run datasette publish vercel demo/jobs.db \
            --metadata demo/metadata.yml \
            --install=datasette-cluster-map \
            --install=datasette-vega \
            --install=datasette-block-robots \
            --install=https://github.com/rclement/datasette-dashboards/archive/$GITHUB_SHA.zip \
            --project=${{ secrets.VERCEL_PROJECT }} \
            --token=${{ secrets.VERCEL_TOKEN }}

  publish-package:
    runs-on: ubuntu-latest
    needs: [test]
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - uses: actions/cache@v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-publish-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-publish-pip-
      - name: Install dependencies
        run: |
          pip install setuptools wheel twine
      - name: Publish package on PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
