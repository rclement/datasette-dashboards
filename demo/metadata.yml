title: Datasette Dashboards Demo
about: rclement/datasette-dashboards
about_url: https://github.com/rclement/datasette-dashboards
description_html: |-
  Try it out at <a href="/-/dashboards">/-/dashboards</a>
plugins:
  datasette-dashboards:
    job_offers_stats:
      title: Job offers statistics
      description: Gather metrics about job offers
      layout:
        - [analysis-note, offers-day, offers-day, offers-region]
        - [analysis-note, offers-source, offers-day-source, offers-region]
      charts:
        - alias: analysis-note
          library: markdown
          display: |-
            # Analysis details

            We wanted to analyze data from job offers, using the **`python` search keyword**
            from three sources of job-boards:
            [APEC](https://www.apec.fr),
            [Indeed](https://fr.indeed.com/) and
            [RegionsJob](https://regionsjob.com).

            ## Process

            The process was in 3 steps:

            - Extraction
            - Transformation
            - Loading

            After the ETL process, an extra data enrichment step was developed to provide
            location geocoding, based on place names.

            ## SQL query

            ```sql
            SELECT
              date(date) as day,
              count(*) as count
            FROM offers_view
            GROUP BY day
            ORDER BY day
            ```

        - alias: offers-day
          title: Number of offers by day
          db: jobs
          query: SELECT date(date) as day, count(*) as count FROM offers_view GROUP BY day ORDER BY day
          library: vega
          display:
            mark: { type: line, tooltip: true }
            encoding:
              x: { field: day, type: temporal }
              y: { field: count, type: quantitative }

        - alias: offers-source
          title: Number of offers by source
          db: jobs
          query: SELECT source, count(*) as count FROM offers_view GROUP BY source ORDER BY count DESC
          library: vega
          display:
            mark: { type: arc, tooltip: true }
            params:
              - name: highlight
                select: { type: point, "on": mouseover }
            encoding:
              color: { field: source, type: nominal }
              theta: { field: count, type: quantitative }
              opacity:
                condition: { param: highlight, value: 1 }
                value: 0.2

        - alias: offers-day-source
          title: Offers by day by source
          db: jobs
          query: SELECT date(date) as day, source, count(*) as count FROM offers_view GROUP BY day, source ORDER BY day
          library: vega
          display:
            mark: { type: bar, tooltip: true }
            params:
              - name: highlight
                select: { type: point, fields: [source] }
                bind: legend
            encoding:
              x: { field: day, type: ordinal, timeUnit: monthdate }
              y: { field: count, type: quantitative }
              color: { field: source, type: nominal }
              opacity:
                condition: { param: highlight, value: 1 }
                value: 0.2

        - alias: offers-region
          title: Offers by region
          db: jobs
          query: SELECT region, count(*) as count FROM offers_view GROUP BY region ORDER BY count DESC
          library: vega
          display:
            mark: geoshape
            projection: { type: mercator }
            transform:
              - lookup: region
                from:
                  data:
                    url: https://raw.githubusercontent.com/gregoiredavid/france-geojson/master/regions.geojson
                    format: { type: json, property: features }
                  key: properties.nom
                  fields: [type, geometry]
            encoding:
              fill:
                field: count
                type: quantitative
                scale: { scheme: blues }
              stroke: { value: white }
              tooltip:
                - { field: region, type: nominal }
                - { field: count, type: quantitative }
